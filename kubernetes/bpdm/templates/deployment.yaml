apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bpdm.fullname" . }}
  labels:
    {{- include "bpdm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bpdm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bpdm.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
             {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springProfiles | join ","  }}
            - name: BPDM_DB_HOST
              value: {{ printf "%s-%s" .Release.Name "postgres" }}
            - name: BPDM_ELASTIC_HOST
              value: {{ printf "%s-%s" .Release.Name "elastic" }}
            {{- $appSecretsName := .Values.applicationSecrets.name }}
            {{- range $key, $val := .Values.applicationSecrets.mappings }}
            - name: {{ $val }}
              valueFrom:
                secretKeyRef:
                  name: {{ $appSecretsName }}
                  key: {{ $key }}
            {{- end}}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "actuator/health/liveness"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "bpdm.name" . }}
                topologyKey: "kubernetes.io/hostname"
