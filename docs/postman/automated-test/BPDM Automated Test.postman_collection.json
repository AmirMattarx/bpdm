{
	"info": {
		"_postman_id": "b0c17786-b741-4a06-a4b2-a0800981e2f9",
		"name": "BPDM Automated Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26818013"
	},
	"item": [
		{
			"name": "Create Metadata LE Identifier Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 409\", function () {",
							"    // Get the response status code",
							"    var statusCode = pm.response.code;",
							"",
							"    // Check if the status code is either 200 or 409",
							"    pm.expect(statusCode).to.be.oneOf([200, 409]);",
							"});",
							"pm.test(\"Check Legal Entity Identifier\", function () {",
							"    var responseBody = pm.response.text();",
							"    var customLEId = pm.collectionVariables.get(\"customLEId\");",
							"    pm.expect(responseBody).to.include(customLEId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var customLEId = \"CUSTOM_LE_ID_\" + uuid.v4();",
							"pm.collectionVariables.set('customLEId', customLEId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"technicalKey\": \"{{customLEId}}\",\n  \"businessPartnerType\": \"LEGAL_ENTITY\",\n  \"name\": \"Custom Identifier Type of LE for Test Automation\",\n  \"details\": [\n    {\n      \"country\": \"DE\",\n      \"mandatory\": true\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Pool-Host}}/api/catena/identifier-types",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"identifier-types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Metadata Add Identifier Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 409\", function () {",
							"    // Get the response status code",
							"    var statusCode = pm.response.code;",
							"",
							"    // Check if the status code is either 200 or 409",
							"    pm.expect(statusCode).to.be.oneOf([200, 409]);",
							"});",
							"pm.test(\"Check Address Identfier\", function () {",
							"    var responseBody = pm.response.text();",
							"    var customAddId = pm.collectionVariables.get(\"customAddId\");",
							"    pm.expect(responseBody).to.include(customAddId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var customAddId = \"CUSTOM_ADD_ID_\" + uuid.v4();",
							"pm.collectionVariables.set('customAddId', customAddId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"technicalKey\": \"{{customAddId}}\",\n  \"businessPartnerType\": \"ADDRESS\",\n  \"name\": \"Custom Identifier Type of Test Automation\",\n  \"details\": [\n    {\n      \"country\": \"DE\",\n      \"mandatory\": true\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Pool-Host}}/api/catena/identifier-types",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"identifier-types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Legal Form",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 409\", function () {",
							"    // Get the response status code",
							"    var statusCode = pm.response.code;",
							"",
							"    // Check if the status code is either 200 or 409",
							"    pm.expect(statusCode).to.be.oneOf([200, 409]);",
							"});",
							"",
							"pm.test(\"Check Legal from\", function () {",
							"    var responseBody = pm.response.text();",
							"    var customLegalFormId = pm.collectionVariables.get(\"customLegalFormId\");",
							"    pm.expect(responseBody).to.include(customLegalFormId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var customLegalFormId = \"CUSTOM_LEGAL_FORM_\" + uuid.v4();",
							"pm.collectionVariables.set('customLegalFormId', customLegalFormId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"technicalKey\": \"{{customLegalFormId}}\",\n  \"name\": \"Legal Form for Test Automation\",\n  \"abbreviation\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Pool-Host}}/api/catena/legal-forms",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"legal-forms"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query LE Identifier Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/identifier-types?businessPartnerType=LEGAL_ENTITY&technicalKey={{customLEId}}",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"identifier-types"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"disabled": true
						},
						{
							"key": "size",
							"value": "10",
							"disabled": true
						},
						{
							"key": "businessPartnerType",
							"value": "LEGAL_ENTITY"
						},
						{
							"key": "technicalKey",
							"value": "{{customLEId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Add Identifier Types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/identifier-types?businessPartnerType=ADDRESS&technicalKey={{customAddId}}",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"identifier-types"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"disabled": true
						},
						{
							"key": "size",
							"value": "10",
							"disabled": true
						},
						{
							"key": "technicalKey",
							"value": "CUSTOM_LE_ID_TEST_AUTO",
							"disabled": true
						},
						{
							"key": "businessPartnerType",
							"value": "ADDRESS"
						},
						{
							"key": "technicalKey",
							"value": "{{customAddId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Legal Forms",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/legal-forms?page=0&size=10",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"legal-forms"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Business Partner Legal Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set random External Id",
							"var uuid = require('uuid');",
							"var externalIdLegalEntity =  uuid.v4();",
							"pm.collectionVariables.set('externalIdLegalEntity', externalIdLegalEntity);",
							"",
							"// Set random Identifier value",
							"var identifierValue =  uuid.v4();",
							"pm.collectionVariables.set('identifierValue', identifierValue);;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"legalNameParts\": [\n            \"Comapany Test Auto\"\n        ],\n        \"identifiers\": [\n            {\n                \"value\": \"{{identifierValue}}\",\n                \"type\": \"{{customLEId}}\",\n                \"issuingBody\": \"ISSUE_BODY_TEST_AUTO\"\n            }\n        ],\n        \"legalShortName\": \"CTA\",\n        \"legalForm\": \"{{customLegalFormId}}\",\n        \"states\": [\n            {\n                \"officialDenotation\": \"Active\",\n                \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                \"validTo\": \"2024-06-09T07:31:01.213Z\",\n                \"type\": \"ACTIVE\"\n            }\n        ],\n        \"classifications\": [\n            {\n                \"value\": \"Classsification test auto\",\n                \"code\": \"01.21\",\n                \"type\": \"NACE\"\n            }\n        ],\n        \"roles\": [\n            \"SUPPLIER\"\n        ],\n        \"legalAddress\": {\n            \"nameParts\": [\n                \"ADDRESS_TEST_AUTO\"\n            ],\n            \"states\": [\n                {\n                    \"description\": \"ADDRESS_TEST_AUTO\",\n                    \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                    \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                    \"type\": \"ACTIVE\"\n                }\n            ],\n            \"identifiers\": [\n                {\n                    \"value\": \"{{identifierValue}}\",\n                    \"type\": \"{{customAddId}}\"\n                }\n            ],\n            \"physicalPostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"1111\",\n                \"city\": \"TestCity\",\n                \"street\": {\n                    \"namePrefix\": \"test prefix1\",\n                    \"additionalNamePrefix\": \"test1\",\n                    \"nameSuffix\": \"test suffix\",\n                    \"name\": \"Stuttgarter Strasse\",\n                    \"additionalNameSuffix\": \"test2\",\n                    \"houseNumber\": \"1\",\n                    \"milestone\": \"Test milestone 1\",\n                    \"direction\": \"Test direction 1\"\n                },\n                \"administrativeAreaLevel1\": null,\n                \"administrativeAreaLevel2\": \"test1\",\n                \"administrativeAreaLevel3\": \"test2\",\n                \"district\": \"Test district\",\n                \"companyPostalCode\": \"1234\",\n                \"industrialZone\": \"Test industrialZone 1\",\n                \"building\": \"Test building 1\",\n                \"floor\": \"F\",\n                \"door\": \"test door 1\"\n            },\n            \"alternativePostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"2222\",\n                \"city\": \"Test city 2\",\n                \"administrativeAreaLevel1\": null,\n                \"deliveryServiceNumber\": \"2222\",\n                \"deliveryServiceType\": \"PO_BOX\",\n                \"deliveryServiceQualifier\": \"test deliveryServiceQualifier\"\n            },\n            \"roles\": [\n                \"SUPPLIER\"\n            ]\n        },\n        \"externalId\": \"{{externalIdLegalEntity}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/legal-entities",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"legal-entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Business Partner Legal Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var externalIdLegalEntity = pm.collectionVariables.get(externalIdLegalEntity);",
							"pm.test(\"Check External-Id being fetched\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.value).to.eql(externalIdLegalEntity);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/legal-entities/{{externalIdLegalEntity}}",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"legal-entities",
						"{{externalIdLegalEntity}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set random External Id",
							"var uuid = require('uuid');",
							"var externalIdLegalSite =  uuid.v4();",
							"pm.collectionVariables.set('externalIdLegalSite', externalIdLegalSite);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"nameParts\": [\n            \"Comapany Site Test Auto\"\n        ],\n        \"states\": [\n            {\n                \"description\": \"description test auto\",\n                \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                \"type\": \"ACTIVE\"\n            }\n        ],\n        \"roles\": [\n            \"SUPPLIER\"\n        ],\n        \"mainAddress\": {\n            \"nameParts\": [\n                \"ADDRESS_TEST_AUTO\"\n            ],\n            \"states\": [\n                {\n                    \"description\": \"description test auto\",\n                    \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                    \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                    \"type\": \"ACTIVE\"\n                }\n            ],\n            \"identifiers\": [\n                {\n                    \"value\": \"{{identifierValue}}\",\n                    \"type\": \"{{customAddId}}\"\n                }\n            ],\n            \"physicalPostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"1111\",\n                \"city\": \"TestCity\",\n                \"street\": {\n                    \"namePrefix\": \"test prefix1\",\n                    \"additionalNamePrefix\": \"test1\",\n                    \"name\": \"Stuttgarter Strasse Test1\",\n                    \"nameSuffix\": \"test1 suffix\",\n                    \"additionalNameSuffix\": \"test2\",\n                    \"houseNumber\": \"1\",\n                    \"milestone\": \"Test milestone 1\",\n                    \"direction\": \"Test direction 1\"\n                },\n                \"administrativeAreaLevel1\": null,\n                \"administrativeAreaLevel2\": \"test1\",\n                \"administrativeAreaLevel3\": \"test2\",\n                \"district\": \"Test district\",\n                \"companyPostalCode\": \"1234\",\n                \"industrialZone\": \"Test industrialZone 1\",\n                \"building\": \"Test building 1\",\n                \"floor\": \"F\",\n                \"door\": \"test door 1\"\n            },\n            \"alternativePostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"2222\",\n                \"city\": \"Test city 2\",\n                \"administrativeAreaLevel1\":null,\n                \"deliveryServiceNumber\": \"2222\",\n                \"deliveryServiceType\": \"PO_BOX\",\n                \"deliveryServiceQualifier\": \"test deliveryServiceQualifier\"\n            },\n            \"roles\": [\n                \"SUPPLIER\"\n            ]\n        },\n        \"externalId\": \"{{externalIdLegalSite}}\",\n        \"legalEntityExternalId\": \"{{externalId}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/sites",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"sites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var externalIdLegalSite = pm.collectionVariables.get(externalIdLegalSite);",
							"pm.test(\"Check External ID of Site\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.value).to.eql(externalIdLegalSite);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{externalIdLegalSite}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/sites/search",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"sites",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bridge Sync",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Bridge-Host}}/api/bridge/sync",
					"host": [
						"{{Bridge-Host}}"
					],
					"path": [
						"api",
						"bridge",
						"sync"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pool - Query Business partner Legal Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var identifierValue = pm.collectionVariables.get(\"identifierValue\");",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(identifierValue);",
							"});",
							"var customLEId = pm.collectionVariables.get(\"customLEId\");",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(customLEId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/legal-entities/{{identifierValue}}?idType={{customLEId}}",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"legal-entities",
						"{{identifierValue}}"
					],
					"query": [
						{
							"key": "idType",
							"value": "{{customLEId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pool - Query Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Comapany Site Test Auto\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/sites",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"sites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Business Partner Legal Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"legalNameParts\": [\n            \"Comapany Test Auto\"\n        ],\n        \"identifiers\": [\n            {\n                \"value\": \"{{identifierValue}}\",\n                \"type\": \"{{customLEId}}\",\n                \"issuingBody\": \"ISSUE_BODY_TEST_AUTO\"\n            }\n        ],\n        \"legalShortName\": \"CTA\",\n        \"legalForm\": \"LEGAL_FORM_TEST_AUTO\",\n        \"states\": [\n            {\n                \"officialDenotation\": \"Active\",\n                \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                \"validTo\": \"2024-06-09T07:31:01.213Z\",\n                \"type\": \"ACTIVE\"\n            }\n        ],\n        \"classifications\": [\n            {\n                \"value\": \"Classsification test auto\",\n                \"code\": \"01.21\",\n                \"type\": \"NACE\"\n            }\n        ],\n        \"roles\": [\n            \"SUPPLIER\"\n        ],\n        \"legalAddress\": {\n            \"nameParts\": [\n                \"ADDRESS_TEST_AUTO\"\n            ],\n            \"states\": [\n                {\n                    \"description\": \"ADDRESS_TEST_AUTO\",\n                    \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                    \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                    \"type\": \"ACTIVE\"\n                }\n            ],\n            \"identifiers\": [\n                {\n                    \"value\": \"{{identifierValue}}\",\n                    \"type\": \"{{customAddId}}\"\n                }\n            ],\n            \"physicalPostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"1111\",\n                \"city\": \"TestCity\",\n                \"street\": {\n                    \"namePrefix\": \"test prefix1\",\n                    \"additionalNamePrefix\": \"test1\",\n                    \"nameSuffix\": \"test suffix\",\n                    \"name\": \"Stuttgarter Strasse Test1\",\n                    \"additionalNameSuffix\": \"test2\",\n                    \"houseNumber\": \"1\",\n                    \"milestone\": \"Test milestone 1\",\n                    \"direction\": \"Test direction 1\"\n                },\n                \"administrativeAreaLevel1\": null,\n                \"administrativeAreaLevel2\": \"test1\",\n                \"administrativeAreaLevel3\": \"test2\",\n                \"district\": \"Test district\",\n                \"companyPostalCode\": \"1234\",\n                \"industrialZone\": \"Test industrialZone 1\",\n                \"building\": \"Test building 1\",\n                \"floor\": \"F\",\n                \"door\": \"test door 1\"\n            },\n            \"alternativePostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"2222\",\n                \"city\": \"Test city 2\",\n                \"administrativeAreaLevel1\": null,\n                \"deliveryServiceNumber\": \"2222\",\n                \"deliveryServiceType\": \"PO_BOX\",\n                \"deliveryServiceQualifier\": \"test deliveryServiceQualifier\"\n            },\n            \"roles\": [\n                \"SUPPLIER\"\n            ]\n        },\n        \"externalId\": \"{{externalIdLegalEntity}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/legal-entities",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"legal-entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Business Partner Legal Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var externalIdLegalEntity = pm.collectionVariables.get(externalIdLegalEntity);",
							"pm.test(\"Check External-Id being fetched\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.value).to.eql(externalIdLegalEntity);",
							"});",
							"pm.test(\"Check update Street\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Stuttgarter Strasse Test1\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/legal-entities/{{externalIdLegalEntity}}",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"legal-entities",
						"{{externalIdLegalEntity}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"nameParts\": [\n            \"Comapany Site Test Auto\"\n        ],\n        \"states\": [\n            {\n                \"description\": \"description test auto\",\n                \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                \"type\": \"ACTIVE\"\n            }\n        ],\n        \"roles\": [\n            \"SUPPLIER\"\n        ],\n        \"mainAddress\": {\n            \"nameParts\": [\n                \"ADDRESS_TEST_AUTO\"\n            ],\n            \"states\": [\n                {\n                    \"description\": \"description test auto\",\n                    \"validFrom\": \"2023-07-16T05:54:48.942Z\",\n                    \"validTo\": \"2024-06-05T07:31:01.213Z\",\n                    \"type\": \"ACTIVE\"\n                }\n            ],\n            \"identifiers\": [\n                {\n                    \"value\": \"111111111\",\n                    \"type\": \"{{customAddId}}\"\n                }\n            ],\n            \"physicalPostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"1111\",\n                \"city\": \"TestCity\",\n                \"street\": {\n                    \"namePrefix\": \"test prefix1\",\n                    \"additionalNamePrefix\": \"test1\",\n                    \"name\": \"Stuttgarter Strasse Test1_update\",\n                    \"nameSuffix\": \"test1 suffix\",\n                    \"additionalNameSuffix\": \"test2\",\n                    \"houseNumber\": \"1\",\n                    \"milestone\": \"Test milestone 1\",\n                    \"direction\": \"Test direction 1\"\n                },\n                \"administrativeAreaLevel1\": null,\n                \"administrativeAreaLevel2\": \"test1\",\n                \"administrativeAreaLevel3\": \"test2\",\n                \"district\": \"Test district\",\n                \"companyPostalCode\": \"1234\",\n                \"industrialZone\": \"Test industrialZone 1\",\n                \"building\": \"Test building 1\",\n                \"floor\": \"F\",\n                \"door\": \"test door 1\"\n            },\n            \"alternativePostalAddress\": {\n                \"geographicCoordinates\": {\n                    \"longitude\": 0,\n                    \"latitude\": 0,\n                    \"altitude\": 0\n                },\n                \"country\": \"DE\",\n                \"postalCode\": \"2222\",\n                \"city\": \"Test city 2\",\n                \"administrativeAreaLevel1\":null,\n                \"deliveryServiceNumber\": \"2222\",\n                \"deliveryServiceType\": \"PO_BOX\",\n                \"deliveryServiceQualifier\": \"test deliveryServiceQualifier\"\n            },\n            \"roles\": [\n                \"SUPPLIER\"\n            ]\n        },\n        \"externalId\": \"{{externalIdLegalSite}}\",\n        \"legalEntityExternalId\": \"{{externalIdLegalEntity}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/sites",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"sites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check updated Street\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Stuttgarter Strasse Test1_update\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{externalIdLegalSite}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Gate-Host}}/api/catena/input/sites/search",
					"host": [
						"{{Gate-Host}}"
					],
					"path": [
						"api",
						"catena",
						"input",
						"sites",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bridge Sync Again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Bridge-Host}}/api/bridge/sync",
					"host": [
						"{{Bridge-Host}}"
					],
					"path": [
						"api",
						"bridge",
						"sync"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pool - Query Business partner Legal Entities Again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var identifierValue = pm.collectionVariables.get(\"identifierValue\");",
							"pm.test(\"Check identifier\", function () {",
							"    pm.expect(pm.response.text()).to.include(identifierValue);",
							"});",
							"var customLEId = pm.collectionVariables.get(\"customLEId\");",
							"pm.test(\"Checkin Legal Entity Identifier\", function () {",
							"    pm.expect(pm.response.text()).to.include(customLEId);",
							"});",
							"pm.test(\"Check name part\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Comapany Test Auto\");",
							"});",
							"pm.test(\"Check updated Street\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Stuttgarter Strasse Test1\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/legal-entities/{{identifierValue}}?idType={{customLEId}}",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"legal-entities",
						"{{identifierValue}}"
					],
					"query": [
						{
							"key": "idType",
							"value": "{{customLEId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pool - Query Business Partner Site",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check Name\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Comapany Site Test Auto\");",
							"});",
							"pm.test(\"Check updated Street\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Stuttgarter Strasse Test1_update\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Pool-Host}}/api/catena/sites",
					"host": [
						"{{Pool-Host}}"
					],
					"path": [
						"api",
						"catena",
						"sites"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{Pool-Client-Secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{Pool-Client-ID}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{Keycloak-Host}}/auth/realms/CX-Central/protocol/openid-connect/token",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "BPDM Automated Test Token {{Environment}}",
				"type": "string"
			},
			{
				"key": "refreshRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tech_key",
			"value": ""
		},
		{
			"key": "customLEId",
			"value": ""
		},
		{
			"key": "customLegalFormId",
			"value": ""
		},
		{
			"key": "customAddId",
			"value": ""
		},
		{
			"key": "externalId",
			"value": ""
		},
		{
			"key": "identifierValue",
			"value": ""
		},
		{
			"key": "externalIdLegalSite",
			"value": ""
		},
		{
			"key": "externalIdLegalEntity",
			"value": ""
		}
	]
}