bpdm:
  # Security config (defined in common) for restricting access to the bridge dummy resource server
  bridge:
    syncAuthorities: sync_company_data

  # OAuth2 authorized connection to Pool and Gate client
  client:
    gate:
      oauth2-client-registration: bridge-client
      security-enabled: true
    pool:
      oauth2-client-registration: bridge-client
      security-enabled: true

  security:
    # Security config (defined in common) for restricting access to the bridge dummy resource server
    cors-origins: '*'
    enabled: true
    # OAuth configuration
    auth-server-url: http://localhost:8180
    auth-url: ${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/auth
    client-id: BPDM_BRIDGE_DUMMY
    realm: master
    refresh-url: ${bpdm.security.token-url}
    token-url: ${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/token

spring:
  security:
    oauth2:
      client:
        provider:
          catena-keycloak-provider:
            issuer-uri: ${bpdm.security.auth-server-url:http://localhost:8180}/realms/${bpdm.security.realm:master}
        registration:
          bridge-client:
            authorization-grant-type: client_credentials
            client-id: ${bpdm.security.client-id}
            client-secret: ${bpdm.security.credentials.secret}
            provider: catena-keycloak-provider
      resourceserver:
        # Spring security
        jwt:
          issuer-uri: ${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}
          jwk-set-uri: ${bpdm.security.auth-server-url}/realms/${bpdm.security.realm}/protocol/openid-connect/certs
